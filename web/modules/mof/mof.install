<?php declare(strict_types=1);

/**
 * Implements hook_update_N()
 *
 * Install dependencies for MOT API.
 */
function mof_update_10201() {
  // Enable REST and config management module.
  \Drupal::service('module_installer')->install([
    'rest',
    'config',
    'dynamic_page_cache',
    'page_cache'
  ]);

  // Enable MOT REST plugin.
  \Drupal::service('config.installer')->installDefaultConfig('module', 'mof');

  // Add permission to use REST API for anonymous and authenticated users.
  foreach (['anonymous', 'authenticated'] as $role_name) {
    $role = \Drupal\user\Entity\Role::load($role_name);
    if ($role) {
      $role->grantPermission('restful get model_v1');
      $role->save();
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Removes 'github' field from database schema.
 */
function mof_update_10401() {
  $update_manager = \Drupal::entityDefinitionUpdateManager();

  $storage = \Drupal::service('entity_field.manager')->getFieldStorageDefinitions('model');
  if (isset($storage['github'])) {
    $update_manager->uninstallFieldStorageDefinition($storage['github']);
  }

  $entity_type = \Drupal::entityTypeManager()->getDefinition('model');
  $update_manager->updateEntityType($entity_type);
}

/**
 * Implements hook_update_N().
 *
 * Adds 'repository' field.
 */
function mof_update_10402() {
  $update_manager = \Drupal::entityDefinitionUpdateManager();
  $field_manager = \Drupal::service('entity_field.manager');

  $field = $field_manager->getBaseFieldDefinitions('model')['repository'];
  $update_manager->installFieldStorageDefinition('repository', 'model', 'mof', $field);

  $entity_type = \Drupal::entityTypeManager()->getDefinition('model');
  $update_manager->updateEntityType($entity_type);
}


/**
 * Implements hook_update_N().
 *
 * Updates model form display to render repository field.
 */
function mof_update_10405() {
  $form_display = \Drupal::entityTypeManager()
    ->getStorage('entity_form_display')
    ->load('model.model.default');

  if ($form_display instanceOf \Drupal\Core\Entity\Display\EntityFormDisplayInterface) {
    $form_display->setComponent('repository', [
      'type' => 'string_textfield',
      'weight' => 7,
      'region' => 'content',
      'settings' => [
        'size' => 60,
        'placeholder' => '',
      ]
    ])->save();
  }
}

/**
 * Implements hook_update_N().
 *
 * Remove the 'submit model' permission from any roles that have it.
 * This permission is no longer needed as we moved to pull-requests for
 * model submissions.
 */
function mof_update_10406() {
  foreach (\Drupal\user\Entity\Role::loadMultiple() as $role) {
    if ($role->hasPermission('submit model')) {
      $role->revokePermission('submit model');
      $role->save();
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Update license entity content_type field to allow multiple values.
 * Migrate existing data to the new database table.
 */
function mof_update_10407() {
  $entity_type_id = 'license';
  $field = 'content_type';

  // Setup services and gather what we need.
  $entity_def_update_manager = \Drupal::service('entity.definition_update_manager');
  $entity_def = \Drupal::entityTypeManager()->getDefinition($entity_type_id);
  $field_def = \Drupal::service('entity_field.manager')->getBaseFieldDefinitions($entity_type_id)[$field];

  // Install the new content_type field storage definition.
  $entity_def_update_manager
    ->installFieldStorageDefinition('content_type', $entity_type_id, 'mof', $field_def);

  // Migrate existing data to new table.
  $database = \Drupal::database();
  $table_name = "{$entity_type_id}__{$field}";
  if ($database->schema()->tableExists($table_name)) {
    $query = $database
      ->select('license', 'l')
      ->fields('l', ['id', 'content_type'])
      ->condition('content_type', NULL, 'IS NOT NULL');

    $results = $query->execute()->fetchAll();
    foreach ($results as $row) {
      $database
        ->insert($table_name)
        ->fields([
          'bundle' => 'license',
          'deleted' => 0,
          'entity_id' => $row->id,
          'revision_id' => $row->id,
          'langcode' => 'en',
          'delta' => 0,
          "{$field}_value" => $row->content_type,
        ])
        ->execute();
    }
  }

  // Drop the content_type column from the license table.
  if ($database->schema()->fieldExists($entity_type_id, $field)) {
    $database->schema()->dropField($entity_type_id, $field);
  }

  // Clear caches.
  \Drupal::service('entity_field.manager')->clearCachedFieldDefinitions();

  return t('Updated @field.', ['@field' => $field]);
}

